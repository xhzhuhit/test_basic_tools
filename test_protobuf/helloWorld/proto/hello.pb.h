// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hello.proto

#ifndef PROTOBUF_hello_2eproto__INCLUDED
#define PROTOBUF_hello_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace tutorial {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_hello_2eproto();
void protobuf_AssignDesc_hello_2eproto();
void protobuf_ShutdownFile_hello_2eproto();

class Person;

// ===================================================================

class Person : public ::google::protobuf::Message {
 public:
  Person();
  virtual ~Person();

  Person(const Person& from);

  inline Person& operator=(const Person& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Person& default_instance();

  void Swap(Person* other);

  // implements Message ----------------------------------------------

  Person* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Person& from);
  void MergeFrom(const Person& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double pname = 1;
  inline bool has_pname() const;
  inline void clear_pname();
  static const int kPnameFieldNumber = 1;
  inline double pname() const;
  inline void set_pname(double value);

  // optional double plon = 2;
  inline bool has_plon() const;
  inline void clear_plon();
  static const int kPlonFieldNumber = 2;
  inline double plon() const;
  inline void set_plon(double value);

  // optional double plat = 3;
  inline bool has_plat() const;
  inline void clear_plat();
  static const int kPlatFieldNumber = 3;
  inline double plat() const;
  inline void set_plat(double value);

  // @@protoc_insertion_point(class_scope:tutorial.Person)
 private:
  inline void set_has_pname();
  inline void clear_has_pname();
  inline void set_has_plon();
  inline void clear_has_plon();
  inline void set_has_plat();
  inline void clear_has_plat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double pname_;
  double plon_;
  double plat_;
  friend void  protobuf_AddDesc_hello_2eproto();
  friend void protobuf_AssignDesc_hello_2eproto();
  friend void protobuf_ShutdownFile_hello_2eproto();

  void InitAsDefaultInstance();
  static Person* default_instance_;
};
// ===================================================================


// ===================================================================

// Person

// required double pname = 1;
inline bool Person::has_pname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person::set_has_pname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Person::clear_has_pname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Person::clear_pname() {
  pname_ = 0;
  clear_has_pname();
}
inline double Person::pname() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.pname)
  return pname_;
}
inline void Person::set_pname(double value) {
  set_has_pname();
  pname_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.pname)
}

// optional double plon = 2;
inline bool Person::has_plon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person::set_has_plon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Person::clear_has_plon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Person::clear_plon() {
  plon_ = 0;
  clear_has_plon();
}
inline double Person::plon() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.plon)
  return plon_;
}
inline void Person::set_plon(double value) {
  set_has_plon();
  plon_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.plon)
}

// optional double plat = 3;
inline bool Person::has_plat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Person::set_has_plat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Person::clear_has_plat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Person::clear_plat() {
  plat_ = 0;
  clear_has_plat();
}
inline double Person::plat() const {
  // @@protoc_insertion_point(field_get:tutorial.Person.plat)
  return plat_;
}
inline void Person::set_plat(double value) {
  set_has_plat();
  plat_ = value;
  // @@protoc_insertion_point(field_set:tutorial.Person.plat)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace tutorial

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_hello_2eproto__INCLUDED
